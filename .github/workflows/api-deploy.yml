name: api-deploy

on:
  push:
    tags:
      - "@workspace-deployment/api*"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: yarn --version
      - run: rm packages/{common,app,web}/package.json
      - name: Install deps
        run: yarn install --frozen-lockfile
      - name: Run tests
        run: yarn test

  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: [test]
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
      ID: ${{ secrets.DOCKER_ID }}
      PW: ${{ secrets.DOCKER_PW }}
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        run: docker login -u $ID -p $PW
      - name: Build Docker image
        run: |
          cd packages/api
          docker build -t $REPO:${GITHUB_REF#*@} .
      - name: Publish Docker image
        run: docker push $REPO:${GITHUB_REF#*@}

  update:
    name: Update deploy files - DigitalOcean
    runs-on: ubuntu-latest
    needs: [docker]
    env:
      HOST: ${{ secrets.DO_HOST }}
      USERNAME: ${{ secrets.DO_USERNAME }}
      KEY: ${{ secrets.DO_KEY }}
      PORT: ${{ secrets.DO_PORT }}
      TAG: ${{ github.ref }}
    steps:
      - uses: actions/checkout@v2
      - name: Update deploy files
        uses: appleboy/scp-action@master
        with:
          host: $HOST
          username: $USERNAME
          key: $KEY
          port: $PORT
          rm: true
          source: "./packages/api/deploy"
          target: "app"
          strip_components: 4

  deploy:
    name: Redeploy - DigitalOcean
    runs-on: ubuntu-latest
    needs: [update]
    env:
      HOST: ${{ secrets.DO_HOST }}
      USERNAME: ${{ secrets.DO_USERNAME }}
      KEY: ${{ secrets.DO_KEY }}
      PORT: ${{ secrets.DO_PORT }}
      TAG: ${{ github.ref }}
    steps:
      - name: Docker compose up
        uses: appleboy/ssh-action@master
        with:
          host: $HOST
          username: $USERNAME
          key: $KEY
          port: $PORT
          ENVS: TAG
          script: |
            cd app
            chmod +x ./deploy.sh
            nohup sh ./deploy.sh ${TAG#*@} > nohup.out 2> nohup.err < /dev/null &
